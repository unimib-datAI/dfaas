---
- name: DFaaS node setup from scratch
  hosts: all
  become: true
  vars:
    openfaas_url: "http://127.0.0.1:31112"
    user_home: "{{ ansible_env.HOME }}"

  tasks:
    - name: Install buildah
      apt:
        name: buildah
        state: present
        update_cache: yes

    - name: Disable UFW
      ufw:
        state: disabled

    - name: Install K3S
      shell: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--disable traefik" sh -
      args:
        executable: /bin/bash
        creates: /usr/local/bin/k3s  # Prevents re-installation if already installed

    - name: Build DFaaS agent and forecaster images and push to K3S
      block:
        - name: Build agent image
          command: ./k8s/scripts/build-image.sh agent
          args:
            chdir: "{{ playbook_dir }}"

        - name: Build forecaster image
          command: ./k8s/scripts/build-image.sh forecaster
          args:
            chdir: "{{ playbook_dir }}"
      become: false  # Run as regular user

    - name: Install Helm dependencies
      apt:
        name:
          - curl
          - gpg
          - apt-transport-https
        state: present

    - name: Add Helm GPG key
      shell: curl -fsSL https://packages.buildkite.com/helm-linux/helm-debian/gpgkey | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
      args:
        executable: /bin/bash
        creates: /usr/share/keyrings/helm.gpg

    - name: Add Helm repository
      copy:
        content: "deb [signed-by=/usr/share/keyrings/helm.gpg] https://packages.buildkite.com/helm-linux/helm-debian/any/ any main"
        dest: /etc/apt/sources.list.d/helm-stable-debian.list

    - name: Install Helm
      apt:
        name: helm
        state: present
        update_cache: yes

    - name: Add KUBECONFIG to .bashrc
      lineinfile:
        path: "{{ user_home }}/.bashrc"
        line: 'export KUBECONFIG=/etc/rancher/k3s/k3s.yaml'
        state: present
      become: false

    - name: Configure sudo to preserve KUBECONFIG
      copy:
        content: |
          # Preserve KUBECONFIG env variable.
          Defaults:%sudo env_keep += "KUBECONFIG"
          Defaults !always_set_home
        dest: /etc/sudoers.d/50-helm
        mode: '0440'

    - name: Install faas-cli
      block:
        - name: Create ~/.local/bin directory
          file:
            path: "{{ user_home }}/.local/bin"
            state: directory
            mode: '0755'

        - name: Download faas-cli
          get_url:
            url: https://github.com/openfaas/faas-cli/releases/download/0.17.8/faas-cli
            dest: "{{ user_home }}/.local/bin/faas-cli"
            mode: '0755'

        - name: Add ~/.local/bin to PATH in .bashrc
          lineinfile:
            path: "{{ user_home }}/.bashrc"
            line: 'export PATH="{{ user_home }}/.local/bin:$PATH"'
            state: present
      become: false

    - name: Add Helm repositories
      block:
        - name: Add HAProxy Helm repository
          command: helm repo add haproxytech https://haproxytech.github.io/helm-charts

        - name: Add Prometheus Helm repository
          command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

        - name: Add OpenFaaS Helm repository
          command: helm repo add openfaas https://openfaas.github.io/faas-netes/

        - name: Update Helm repositories
          command: helm repo update
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Install Helm charts
      block:
        - name: Install HAProxy on K3S
          command: helm install haproxy haproxytech/haproxy --version 1.25.0 --values k8s/charts/values-haproxy.yaml
          args:
            chdir: "{{ playbook_dir }}"

        - name: Install Prometheus on K3S
          command: helm install prometheus prometheus-community/prometheus --version 27.37.0 --values k8s/charts/values-prometheus.yaml
          args:
            chdir: "{{ playbook_dir }}"

        - name: Install OpenFaaS on K3S
          command: helm install openfaas openfaas/openfaas --version 14.2.124 --values ./k8s/charts/values-openfaas.yaml
          args:
            chdir: "{{ playbook_dir }}"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Configure OpenFaaS
      block:
        - name: Get OpenFaaS password
          command: kubectl get secret basic-auth -o jsonpath={.data.basic-auth-password} | base64 --decode
          register: openfaas_pwd
          environment:
            KUBECONFIG: /etc/rancher/k3s/k3s.yaml
          become: true

        - name: Add OPENFAAS_URL to .bashrc
          lineinfile:
            path: "{{ user_home }}/.bashrc"
            line: 'export OPENFAAS_URL={{ openfaas_url }}'
            state: present

        - name: Login to OpenFaaS
          shell: "{{ user_home }}/.local/bin/faas-cli login --password '{{ openfaas_pwd.stdout }}'"
          environment:
            OPENFAAS_URL: "{{ openfaas_url }}"

        - name: Deploy OpenFaaS functions
          shell: ./k8s/scripts/deploy_functions.sh
          args:
            chdir: "{{ playbook_dir }}"
          environment:
            OPENFAAS_URL: "{{ openfaas_url }}"
            KUBECONFIG: /etc/rancher/k3s/k3s.yaml
            PATH: "{{ ansible_env.PATH }}:{{ user_home }}/.local/bin"
      become: false

    - name: Install DFaaS Forecaster and extra-setup charts
      block:
        - name: Install Forecaster in K3S
          command: helm install forecaster ./k8s/charts/forecaster
          args:
            chdir: "{{ playbook_dir }}"

        - name: Install DFaaS extra setup
          command: helm install dfaas-extra-setup ./k8s/charts/extra-setup/
          args:
            chdir: "{{ playbook_dir }}"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
